---
title: "Beyond ggplot2 Fundamentals"
author: "Sun Yiping"
date: "January 17, 2024"
date-modified: "last-modified"
execute: 
  warning: false
---

## 1. Learning Outcome

In this chapter, we will learn to create more elegant and effective statistical graphics using ggplot2 extensions. By the end of this exercise, we will be able to:

-   control the placement of annotation on a graph by using functions provided in ggrepel package
-   create professional publication quality figures by using functions provided in ggthemes and hrbrthemes packages
-   plot composite figure by combining ggplot2 graphs using pachwork package

## 2. Getting Started

### 2.1 Installing and loading the required libraries

In this exercise, other than tidyverse, we'll learn to use a few new R packages:

-   [ggrepel](https://ggrepel.slowkow.com/): an R package provides geoms for ggplot2 to repel overlapping text labels
-   [ggthemes](https://statisticsglobe.com/ggthemes-package-r): an R package provides some extra themes, geoms, and scales for ggplot2
-   [hrbrthemes](https://r-graph-gallery.com/package/hrbrthemes.html): an R package provides typography-centric themes and theme components for ggplot2
-   [patchwork](https://patchwork.data-imaginist.com/): an R package for preparing composite figure created using ggplot2

Now, let's start the exercise by installing these packages

```{r}
pacman::p_load(tidyverse, ggrepel, ggthemes, hrbrthemes, patchwork)
```

### 2.2 Importing the data

We'll continue to use Exam_data throughout this exercise. To recap, this data set contains year end examination grades of a cohort of primary 3 students from a local school. The data file is in csv format.

Let's import the data by using read_csv() function of readr package.

```{r}
exam_data <- read_csv("../../Data/Exam_data.csv")
```

The data set consists of 322 rows, and 7 variables.

-   4 categorical variables: ID, CLASS, GENDER, RACE
-   3 numerical variables: ENGLISH, MATHS, SCIENCE

## 3. Beyond ggplot2 Annotation: ggrepel

Annotation is a common challenge we face while plotting statistical graphs, especial for the data with large number of data points. For example, let's take a look at the graph below:

```{r}
#| echo: false
ggplot(data = exam_data,
       aes(x = MATHS,
           y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm,
              size = 0.5) +
  geom_label(aes(label = ID),
             hjust = 0.5,
             vjust = -0.5) +
  coord_cartesian(xlim = c(0, 100),
                  ylim = c(0,100)) +
  ggtitle("English scores vs. Maths scores for Primary 3")
```

In the plot, we want to label the data points with the student ID so it's easy for data interpretation. However, the labels are clustered together due to the large number of data points in the graph. The student ID becomes non-identifiable in this case.

With the help of ggrepel package, we are able to repel the overlapping text labels. What we need to do are:

-   replace geom_text() with geom_text_repel()
-   replace geom_label() with geom_label_repel()

::: panel-tabset
## The plot

```{r}
#| echo: false
ggplot(data = exam_data,
       aes(x = MATHS,
           y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm,
              size = 0.5) +
  geom_label_repel(aes(label = ID),
                   fontface = "bold") +
  coord_cartesian(xlim = c(0, 100),
                  ylim = c(0,100)) +
  ggtitle("English scores vs. Maths scores for Primary 3")
```

## The code

```{r}
#| eval: false
ggplot(data = exam_data,
       aes(x = MATHS,
           y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm,
              size = 0.5) +
  geom_label_repel(aes(label = ID),
                   fontface = "bold") +
  coord_cartesian(xlim = c(0, 100),
                  ylim = c(0,100)) +
  ggtitle("English scores vs. Maths scores for Primary 3")
```
:::

## 4. Beyond ggplot2 Themes

In addition to the data labels, we can also customize the theme of a ggplot. ggplot2 provides 8 built-in themes for us to choose from. The graph below illustrates the 8 built-in themes.

![source: https://ggplot2.tidyverse.org/reference/ggtheme.html](ggplot2_themes.png){fig-align="center"}

Let's now plot the histogram of Maths scores with theme_gray().

::: panel-tabset

## The plot

```{r}
#| echo: false
ggplot(data = exam_data,
       aes(x = MATHS)) +
  geom_histogram(bins = 20,
                 boundary = 100,
                 color = "gray25",
                 fill = "gray90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores")
```

## The code

```{r}
#| eval: false
ggplot(data = exam_data,
       aes(x = MATHS)) +
  geom_histogram(bins = 20,
                 boundary = 100,
                 color = "gray25",
                 fill = "gray90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores")
```

:::












