---
title: "Creating data visualisation beyond default"
author: "Sun Yiping"
date: "January 21, 2024"
date-modified: "January 21, 2024"
execute: 
  warning: false
---

## 1. Setting the Scene

### 1.1 Background

This is the **take home exercise 1 of ISSS608 Visual Analytics and Applications**. In this exercise, we are instructed to analyze a survey data to understand:

-   the distribution of Singapore students' performance in mathematics, reading and science

-   the relationship between these performance with schools, gender and socioeconomic status of the students

Despite the continuous effort from Ministry of Education in Singapore to promote the concept of "Every school a good school", and all the student should be treated the same regardless of their background. People are still not convinced that the neighborhood schools are comparable with the elite schools.

Therefore, we'd use the **survey data from 2022 Programme for International Student Assessment** ([PISA](https://www.oecd.org/pisa/)) to get some insights into what differentiate the students' academic performance.

### 1.2 Data

[**PISA**](https://www.oecd.org/pisa/) is a programme from **Organization for Economic Co-operation and Development ([OECD](https://www.oecd.org/))**. It measures 15-year-olds' ability to use their reading, mathematics and science knowledge and skills to meet real-life challenges, and it's conducted every three years. The last assessment was conducted in 2022, and the data was made publicly available on PISA's website.

In this exercise, we'd focus on the **Student Questionnaire** data, and analyze the responses from the participants from Singapore. The full questionnaire could be found with this [link](https://www.oecd.org/pisa/data/2022database/CY8_202111_QST_MS_STQ_CBA_NoNotes.pdf).

### 1.3 Objective

Analyze the responses from Singapore participants, and understand:

-   the distribution of Singapore students' performance in mathematics, reading and science

-   the relationship between these performance with schools, gender and socioeconomic status of the students

## 2. Understanding the Data

### 2.1 Installing and loading the required libraries

In this exercise, we'll make use the following R packages:

-   [tidyverse](https://www.tidyverse.org/): an opinionated collection of R packages designed for data import, data wrangling and data exploration

-   [haven](https://haven.tidyverse.org/index.html): to import data in SPSS, Stata and SAS data format

-   [patchwork](https://patchwork.data-imaginist.com/): specially designed for combining separate ggplot2 graphs into a single figure

-   [ggdist](https://mjskay.github.io/ggdist/index.html): to visualize distribution and uncertainty

-   [heatmaply](https://talgalili.github.io/heatmaply/): to build interactive heatmap

-   [ggstatsplot](https://indrajeetpatil.github.io/ggstatsplot/): an extension of ggplot2 for creating graphics with detials from statistical tests included in the information-rich plots themselves

Let's use the code chunk below to load the required R packages.

```{r}
pacman::p_load(tidyverse, haven, patchwork, ggdist, heatmaply, ggstatsplot)
```

### 2.2 Importing the data

PISA provides the survey data in two formats, [SPSS and SAS](https://www.oecd.org/pisa/data/2022database/). In this exercise, we've downloaded the data in SAS data format (.sas7bdat).

The code chunk below uses [`read_sas()`](https://haven.tidyverse.org/reference/read_sas.html) function of [haven](https://haven.tidyverse.org/index.html) package to import PISA data into R environment.

```{r}
#| eval: false
stu_qqq <- read_sas("../../Data/cy08msp_stu_qqq.sas7bdat")
```

The dataset contains *1,279 variables*, and *613,744 records* from respondents all over the world. However, we are only interested in the responses from the participants from Singapore. Therefore, we use the code chunk below to filter the data using *CNT (country code)* variable.

```{r}
#| eval: false
stu_qqq_sg <- stu_qqq %>% 
  filter(CNT == "SGP")
```

Now, the filtered data only contains *6,606 records* from Singapore, and the number of variables remains at 1,279.

The code chunk below is used to save the filtered data in *rds* format which is easier to be used in R environment.

```{r}
#| eval: false
write_rds(stu_qqq_sg, "../../Data/stu_qqq_sg.rds")
```

Next, we use the code chunk below to import the *rds* data for the subsequent analyses.

```{r}
stu_qqq_sg <- read_rds("../../Data/stu_qqq_sg.rds")
```

### 2.3 Understanding the data

#### 2.3.1 Students' performance

In PISA data, students' performance was estimated through a set of plausible values. Starting from 2015, PISA provides 10 plausible values for each subject (mathematics, reading and science) instead of 5 in the earlier years. To understand more about plausible values, you may refer to Chapter 6 of [PISA Data Analysis Manual](https://www.oecd-ilibrary.org/docserver/9789264056275-en.pdf?expires=1705834565&id=id&accname=guest&checksum=849F56A0D688D1192E30FC8F38D292FD).

Below lists the 10 plausible variables for each subject:

-   mathematics: PV1MATH, ..., PV10MATH
-   reading: PV1READ, ..., PV10READ
-   science: PV1SCIE, ..., PV10SCIE

There have been discussions about how to estimate the students' performance using the plausible values. Although PISA Data Analysis Manual has provided a logic to create estimates, it also mentioned that the imputation error is relatively small with one plausible value if the sample size is large.

According to the table provided in the manual, the imputation error reduces as the sample size grows. The imputation error is 0.23 with a sample size being 6,400.

![source: PISA Data Analysis Manual](Plausible%20Values.png){fig-align="center"}

Since our Singapore dataset has 6,606 data records, we'll use the first plausible value of each subject to estimate the students' proficiency. Hence, the variables that will be used as an estimate of the students' performance are:

-   mathematics: PV1MATH
-   reading: PV1READ
-   science: PV1SCIE

The code chunk below provides the summary statistics of the chosen plausible values.

```{r}
stu_qqq_sg %>%
  select(PV1MATH, PV1READ, PV1SCIE) %>%
  summary()

```

#### 2.3.2 Students' school

PISA data provides a variable called CNTSCHID to indicate the school that the students are from.

The code chunk below displays the frequency of each school ID in the variable CNTSCHID.

```{r}
# Count number of distinct values in School ID variable
n_distinct(stu_qqq_sg$CNTSCHID)

# Count the number of respondents from each school
table(stu_qqq_sg$CNTSCHID)

```

There are a total of 164 schools participated in 2022 assessment, and they are represented by a unique school ID. However, I couldn't find the data dictionary of school ID in PISA's website. Hence, we're unable to identify the schools for more in-depth analysis. For example, understand the differences in students' performance from elite schools and neighborhood schools.

#### 2.3.3 Students' gender

The students' gender is provided in the variable called ST004D01T, where 1 represent females and 2 represent males.

The code chunk below displays the frequency of female students and male students.

```{r}
# frequency
table(stu_qqq_sg$ST004D01T)

# proportion
table(stu_qqq_sg$ST004D01T) %>% prop.table() %>% round(2)

```

There are 3,248 female students which accounts for 49% of the total sample size, and 3,358 male students which accounts for 51% of the total sample size.

#### 2.3.4 Students' socioeconomic status

The students' socioeconomic status in PISA data is represented by an index of economic, social and cultural status (ESCS). It's a composite score derived from a few aspects of the students' family background

-   parents’ highest education
-   parents’ highest occupational status
-   home possessions

The code chunk below shows the summary statistics of the variable ESCS:

```{r}
stu_qqq_sg %>%
  select(ESCS) %>%
  summary()

```

## 3. Exploratory Data Analysis

In this section, we'll use visual graphics to understand the distribution of the students' performance in mathematics, reading and science. We are also going to explore if there is any differences among schools, gender and socioeconomic status.

### 3.1 Overall distribution

The code chunk below plots the distribution of the plausible values of mathematics, reading and science.

::: panel-tabset
## The plot

```{r}
#| echo: false

# Calculate mean, max and min of the plausible values for mathematics
maths_mean <- mean(stu_qqq_sg$PV1MATH)
maths_min <- min(stu_qqq_sg$PV1MATH)
maths_max <- max(stu_qqq_sg$PV1MATH)

# Plot the histogram of mathematics, and assign it to a variable
hist_maths <- ggplot(data = stu_qqq_sg,
             aes(x = PV1MATH)) +
  geom_histogram(bins = 20,
                 boundary = 100,
                 color = "chartreuse3",
                 fill = "lightgreen") +
  geom_vline(aes(xintercept = maths_mean),
             color = "darkgreen",
             linetype = "dashed") +
  geom_vline(aes(xintercept = maths_min),
             color = "darkgreen",
             linetype = "dashed") +
  geom_vline(aes(xintercept = maths_max),
             color = "darkgreen",
             linetype = "dashed") +
  annotate("text", x = maths_mean, y = 1100,label = paste("Mean=", round(maths_mean, 1)), size = 3, color = "darkgreen") +
  annotate("text", x = maths_min, y = 1000,label = paste("Min=", round(maths_min, 1)), size = 3, color = "darkgreen") +
  annotate("text", x = maths_max - 50, y = 1000,label = paste("Max=", round(maths_max, 1)), size = 3, color = "darkgreen") +
  coord_cartesian(xlim = c(0, 1100),
                  ylim = c(0, 1100)) +
  ggtitle("Mathematics") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8))
  
# Calculate mean, max and min of the plausible values for reading
read_mean <- mean(stu_qqq_sg$PV1READ)
read_min <- min(stu_qqq_sg$PV1READ)
read_max <- max(stu_qqq_sg$PV1READ)

# Plot the histogram of reading, and assign it to a variable
hist_read <- ggplot(data = stu_qqq_sg,
             aes(x = PV1READ)) +
  geom_histogram(bins = 20,
                 boundary = 100,
                 color = "blue",
                 fill = "lightblue") +
  geom_vline(aes(xintercept = read_mean),
             color = "darkblue",
             linetype = "dashed") +
  geom_vline(aes(xintercept = read_min),
             color = "darkblue",
             linetype = "dashed") +
  geom_vline(aes(xintercept = read_max),
             color = "darkblue",
             linetype = "dashed") +
  annotate("text", x = read_mean, y = 1100,label = paste("Mean=", round(read_mean, 1)), size = 3, color = "darkblue") +
  annotate("text", x = read_min + 50, y = 1000,label = paste("Min=", round(read_min, 1)), size = 3, color = "darkblue") +
  annotate("text", x = read_max - 50, y = 1000,label = paste("Max=", round(read_max, 1)), size = 3, color = "darkblue") +
  coord_cartesian(xlim = c(0, 1100),
                  ylim = c(0, 1100)) +
  ggtitle("Reading") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8))

# Calculate mean, max and min of the plausible values for science
science_mean <- mean(stu_qqq_sg$PV1SCIE)
science_min <- min(stu_qqq_sg$PV1SCIE)
science_max <- max(stu_qqq_sg$PV1SCIE)

# Plot the histogram of science, and assign it to a variable
hist_science <- ggplot(data = stu_qqq_sg,
             aes(x = PV1SCIE)) +
  geom_histogram(bins = 20,
                 boundary = 100,
                 color = "red",
                 fill = "pink") +
  geom_vline(aes(xintercept = science_mean),
             color = "darkred",
             linetype = "dashed") +
  geom_vline(aes(xintercept = science_min),
             color = "darkred",
             linetype = "dashed") +
  geom_vline(aes(xintercept = science_max),
             color = "darkred",
             linetype = "dashed") +
  annotate("text", x = science_mean, y = 1100,label = paste("Mean=", round(science_mean, 1)), size = 3, color = "darkred") +
  annotate("text", x = science_min + 50, y = 1000,label = paste("Min=", round(science_min, 1)), size = 3, color = "darkred") +
  annotate("text", x = science_max - 50, y = 1000,label = paste("Max=", round(science_max, 1)), size = 3, color = "darkred") +
  coord_cartesian(xlim = c(0, 1100),
                  ylim = c(0, 1100)) +
  ggtitle("Science") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8))

hist_maths + hist_read + hist_science +
  plot_annotation("Distribution of Plausible Values for Each Subject",
                  theme = theme(plot.title = element_text(hjust = 0.5)))

```

## The code

```{r}
#| eval: false

# Calculate mean, max and min of the plausible values for mathematics
maths_mean <- mean(stu_qqq_sg$PV1MATH)
maths_min <- min(stu_qqq_sg$PV1MATH)
maths_max <- max(stu_qqq_sg$PV1MATH)

# Plot the histogram of mathematics, and assign it to a variable
hist_maths <- ggplot(data = stu_qqq_sg,
             aes(x = PV1MATH)) +
  geom_histogram(bins = 20,
                 boundary = 100,
                 color = "chartreuse3",
                 fill = "lightgreen") +
  geom_vline(aes(xintercept = maths_mean),
             color = "darkgreen",
             linetype = "dashed") +
  geom_vline(aes(xintercept = maths_min),
             color = "darkgreen",
             linetype = "dashed") +
  geom_vline(aes(xintercept = maths_max),
             color = "darkgreen",
             linetype = "dashed") +
  annotate("text", x = maths_mean, y = 1100,label = paste("Mean=", round(maths_mean, 1)), size = 3, color = "darkgreen") +
  annotate("text", x = maths_min, y = 1000,label = paste("Min=", round(maths_min, 1)), size = 3, color = "darkgreen") +
  annotate("text", x = maths_max - 50, y = 1000,label = paste("Max=", round(maths_max, 1)), size = 3, color = "darkgreen") +
  coord_cartesian(xlim = c(0, 1100),
                  ylim = c(0, 1100)) +
  ggtitle("Mathematics") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8))
  
# Calculate mean, max and min of the plausible values for reading
read_mean <- mean(stu_qqq_sg$PV1READ)
read_min <- min(stu_qqq_sg$PV1READ)
read_max <- max(stu_qqq_sg$PV1READ)

# Plot the histogram of reading, and assign it to a variable
hist_read <- ggplot(data = stu_qqq_sg,
             aes(x = PV1READ)) +
  geom_histogram(bins = 20,
                 boundary = 100,
                 color = "blue",
                 fill = "lightblue") +
  geom_vline(aes(xintercept = read_mean),
             color = "darkblue",
             linetype = "dashed") +
  geom_vline(aes(xintercept = read_min),
             color = "darkblue",
             linetype = "dashed") +
  geom_vline(aes(xintercept = read_max),
             color = "darkblue",
             linetype = "dashed") +
  annotate("text", x = read_mean, y = 1100,label = paste("Mean=", round(read_mean, 1)), size = 3, color = "darkblue") +
  annotate("text", x = read_min + 50, y = 1000,label = paste("Min=", round(read_min, 1)), size = 3, color = "darkblue") +
  annotate("text", x = read_max - 50, y = 1000,label = paste("Max=", round(read_max, 1)), size = 3, color = "darkblue") +
  coord_cartesian(xlim = c(0, 1100),
                  ylim = c(0, 1100)) +
  ggtitle("Reading") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8))

# Calculate mean, max and min of the plausible values for science
science_mean <- mean(stu_qqq_sg$PV1SCIE)
science_min <- min(stu_qqq_sg$PV1SCIE)
science_max <- max(stu_qqq_sg$PV1SCIE)

# Plot the histogram of science, and assign it to a variable
hist_science <- ggplot(data = stu_qqq_sg,
             aes(x = PV1SCIE)) +
  geom_histogram(bins = 20,
                 boundary = 100,
                 color = "red",
                 fill = "pink") +
  geom_vline(aes(xintercept = science_mean),
             color = "darkred",
             linetype = "dashed") +
  geom_vline(aes(xintercept = science_min),
             color = "darkred",
             linetype = "dashed") +
  geom_vline(aes(xintercept = science_max),
             color = "darkred",
             linetype = "dashed") +
  annotate("text", x = science_mean, y = 1100,label = paste("Mean=", round(science_mean, 1)), size = 3, color = "darkred") +
  annotate("text", x = science_min + 50, y = 1000,label = paste("Min=", round(science_min, 1)), size = 3, color = "darkred") +
  annotate("text", x = science_max - 50, y = 1000,label = paste("Max=", round(science_max, 1)), size = 3, color = "darkred") +
  coord_cartesian(xlim = c(0, 1100),
                  ylim = c(0, 1100)) +
  ggtitle("Science") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8))

hist_maths + hist_read + hist_science +
  plot_annotation("Distribution of Plausible Values for Each Subject",
                  theme = theme(plot.title = element_text(hjust = 0.5)))

```
:::

::: callout-tip
## Interpretation

The plausible values of mathematics, reading and science all follow normal distribution. The students in Singapore performed the best in mathematics, with a mean plausible value of 574.2. The mean plausible value for science is 560.8, and reading registered the lowest plausible value with a mean being 544.4.

The results are inline with the common perception of Singapore's education where students are good at mathematics and science subjects. A similar result was also obtained in a [2019 study](https://www.moe.gov.sg/news/press-releases/20201208-timss-2019-singapore-students-continue-to-excel-in-mathematics-and-science) of Trends in International Mathematics and Science Study (TIMSS), according to a press release from Ministry of Education Singapore.
:::

### 3.2 Differences between female students and male students

Next, let's compare the plausible values between female students and male students.

::: panel-tabset
## The plot

```{r}
#| echo: false

# Recode Gender variable to a new string variable
stu_qqq_sg <- stu_qqq_sg %>% 
  mutate(Gender = case_when(ST004D01T == 1 ~ 'Female',
                            ST004D01T == 2 ~ 'Male'))

# Raincloud plot of mathematics, and assign it to a variable
rain_maths <- ggplot(stu_qqq_sg,
       aes(x = Gender,
           y = PV1MATH)) +
  stat_halfeye(position = "dodge",
               width = 0.5,
               adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               slab_color = "chartreuse3",
               slab_fill = "lightgreen") +
  geom_boxplot(width = 0.20,
               outlier.shape = NA,
               color = "darkgreen") +
  stat_dots(side = "left",
            justification = 1.2,
            binwidth = 0.5,
            dotsize = 6,
            color = "darkgreen") +
  geom_hline(aes(yintercept = maths_mean),
             color = "darkgreen",
             linetype = "dashed") +
  annotate("text", x = 0, y = maths_mean,label = paste("Overall Mean"), size = 3, color = "darkgreen") +
  coord_flip() +
  ggtitle("Mathematics") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8),
        axis.text = element_text(size = 8),
        legend.key = element_blank())

rain_read <- ggplot(stu_qqq_sg,
       aes(x = Gender,
           y = PV1READ)) +
  stat_halfeye(position = "dodge",
               width = 0.5,
               adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               slab_color = "blue",
               slab_fill = "lightblue") +
  geom_boxplot(width = 0.20,
               outlier.shape = NA,
               color = "darkblue") +
  stat_dots(side = "left",
            justification = 1.2,
            binwidth = 0.5,
            dotsize = 6,
            color = "darkblue") +
  geom_hline(aes(yintercept = read_mean),
             color = "darkblue",
             linetype = "dashed") +
  annotate("text", x = 0, y = read_mean,label = paste("Overall Mean"), size = 3, color = "darkblue") +
  coord_flip() +
  ggtitle("Reading") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8),
        axis.text = element_text(size = 8))

rain_science <- ggplot(stu_qqq_sg,
       aes(x = Gender,
           y = PV1SCIE)) +
  stat_halfeye(position = "dodge",
               width = 0.5,
               adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               slab_color = "red",
               slab_fill = "pink") +
  geom_boxplot(width = 0.20,
               outlier.shape = NA,
               color = "darkred") +
  stat_dots(side = "left",
            justification = 1.2,
            binwidth = 0.5,
            dotsize = 6,
            color = "darkred") +
  geom_hline(aes(yintercept = science_mean),
             color = "darkred",
             linetype = "dashed") +
  annotate("text", x = 0, y = science_mean,label = paste("Overall Mean"), size = 3, color = "darkred") +
  coord_flip() +
  ggtitle("Science") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8),
        axis.text = element_text(size = 8))

rain_maths + rain_read + rain_science +
  plot_annotation("Distribution of Plausible Values for Each Subject by Gender",
                  theme = theme(plot.title = element_text(hjust = 0.5)))

```

## The code

```{r}
#| eval: false

# Recode Gender variable to a new string variable
stu_qqq_sg <- stu_qqq_sg %>% 
  mutate(Gender = case_when(ST004D01T == 1 ~ 'Female',
                            ST004D01T == 2 ~ 'Male'))

# Raincloud plot of mathematics, and assign it to a variable
rain_maths <- ggplot(stu_qqq_sg,
       aes(x = Gender,
           y = PV1MATH)) +
  stat_halfeye(position = "dodge",
               width = 0.5,
               adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               slab_color = "chartreuse3",
               slab_fill = "lightgreen") +
  geom_boxplot(width = 0.20,
               outlier.shape = NA,
               color = "darkgreen") +
  stat_dots(side = "left",
            justification = 1.2,
            binwidth = 0.5,
            dotsize = 6,
            color = "darkgreen") +
  geom_hline(aes(yintercept = maths_mean),
             color = "darkgreen",
             linetype = "dashed") +
  annotate("text", x = 0, y = maths_mean,label = paste("Overall Mean"), size = 3, color = "darkgreen") +
  coord_flip() +
  ggtitle("Mathematics") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8),
        axis.text = element_text(size = 8),
        legend.key = element_blank())

rain_read <- ggplot(stu_qqq_sg,
       aes(x = Gender,
           y = PV1READ)) +
  stat_halfeye(position = "dodge",
               width = 0.5,
               adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               slab_color = "blue",
               slab_fill = "lightblue") +
  geom_boxplot(width = 0.20,
               outlier.shape = NA,
               color = "darkblue") +
  stat_dots(side = "left",
            justification = 1.2,
            binwidth = 0.5,
            dotsize = 6,
            color = "darkblue") +
  geom_hline(aes(yintercept = read_mean),
             color = "darkblue",
             linetype = "dashed") +
  annotate("text", x = 0, y = read_mean,label = paste("Overall Mean"), size = 3, color = "darkblue") +
  coord_flip() +
  ggtitle("Reading") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8),
        axis.text = element_text(size = 8))

rain_science <- ggplot(stu_qqq_sg,
       aes(x = Gender,
           y = PV1SCIE)) +
  stat_halfeye(position = "dodge",
               width = 0.5,
               adjust = 0.5,
               justification = -0.2,
               .width = 0,
               point_colour = NA,
               slab_color = "red",
               slab_fill = "pink") +
  geom_boxplot(width = 0.20,
               outlier.shape = NA,
               color = "darkred") +
  stat_dots(side = "left",
            justification = 1.2,
            binwidth = 0.5,
            dotsize = 6,
            color = "darkred") +
  geom_hline(aes(yintercept = science_mean),
             color = "darkred",
             linetype = "dashed") +
  annotate("text", x = 0, y = science_mean,label = paste("Overall Mean"), size = 3, color = "darkred") +
  coord_flip() +
  ggtitle("Science") +
  theme(plot.title = element_text(size = 8, hjust = 0.5),
        axis.title = element_text(size = 8),
        axis.text = element_text(size = 8))

rain_maths + rain_read + rain_science +
  plot_annotation("Distribution of Plausible Values for Each Subject by Gender",
                  theme = theme(plot.title = element_text(hjust = 0.5)))

```
:::

::: callout-tip
## Interpretation

In general, female students and male students perform similarly in all the three subjects. However, there are still slight difference.

Female students did better in reading, while male students did slightly better in mathematics and science. A previous study (Halpern, D.F., Benbow, C.P., etc. 2007) discussed that the differences in the performance between female students and male students in mathematics and science could be indirectly related to the differences in interests and specific brain and cognitive systems.
:::

### 3.3 Differences among schools

Next, let's compare the students performance among different schools. Since there are 164 schools participated in PISA 2022 assessment and there isn't any information to identify which schools they are, we are unable to group them in any ways but have to compare the mean performance by individual schools.

In view of the large number of schools, I'll use a heat map to see if there is any differences in performance across schools for each subject.

The code chunk below prepares the data for plotting the heat map.

```{r}
# Create a dataframe with the means by each school
stu_qqq_sg_heat <- stu_qqq_sg %>%
  group_by(CNTSCHID) %>%
  summarise_at(vars(PV1MATH, PV1READ, PV1SCIE),
               funs(mean(.,na.rm = TRUE)))

# Create a new variable for simplified School ID for ease of calculation and display later
stu_qqq_sg_heat$SCHID_3D <- stu_qqq_sg_heat$CNTSCHID - 70200000

# Change the row names to simplified school ID
row.names(stu_qqq_sg_heat) <- stu_qqq_sg_heat$SCHID_3D

# Only keep the variables that are needed for the heat map
stu_qqq_sg_heat <- stu_qqq_sg_heat %>%
  dplyr::select(-CNTSCHID, -SCHID_3D)

# Convert the dataframe into a matrix
stu_qqq_sg_heat_matrix <- data.matrix(stu_qqq_sg_heat)

```

Let's now create the heat map.

::: panel-tabset
## The plot

```{r fig.height=12}
#| echo: false

heatmaply(stu_qqq_sg_heat_matrix,
          dendrogram = "none",
          xlab = "School ID",
          ylab = "Plausible Values",
          main = "Difference in Performance across Schools",
          grid_color = "white",
          grid_width = 0.00001,
          label_names = c("School ID: ", "Subject: ", "Value"),
          fontsize_row = 5,
          fontsize_col = 5)

```

## The code

```{r}
#| eval: false

heatmaply(stu_qqq_sg_heat_matrix,
          dendrogram = "none",
          xlab = "School ID",
          ylab = "Plausible Values",
          main = "Difference in Performance across Schools",
          grid_color = "white",
          grid_width = 0.00001,
          label_names = c("School ID: ", "Subject: ", "Value"),
          fontsize_row = 5,
          fontsize_col = 5)

```
:::

::: callout-tip
## Interpretation

The heat map above shows that there are indeed differences in schools.

Some schools performed equally badly among all the three subjects, such as School ID 149 (mathematics: 392.8, reading: 328.2, science: 378.7) and School ID 115 (mathematics: 410.5, reading: 390.1, science: 397.7).

On the other hand, there are schools performed well in all the three subjects. For example, School ID 154 (mathematics: 689.1, reading: 680.3, science: 678.0) and School ID 62 (mathematics: 690.2, reading: 676.1, science: 666.3).

Nevertheless, most of the schools performed better in mathematics and science than reading in general.
:::

### 3.4 Differences among socioeconomic status

Next, let's take a look at the relationship between the students' performance and their families' socioeconomic status.

The code chunk below plots the scatter plots between the plausible values and ESCS index.

::: panel-tabset
## The plot

```{r fig.height = 12}
#| echo: false

# Create scatter plot between mathematics and socioeconomic status
scatter_maths <- ggscatterstats(data = stu_qqq_sg,
               x = ESCS,
               y = PV1MATH,
               marginal = FALSE,
               point.args = list(size = 0.5, 
                                 alpha = 0.4, 
                                 color = "chartreuse3"),
               smooth.line.args = list(linewidth = 0.5, 
                                       color = "gray15", 
                                       method = "lm", 
                                       formula = y ~ x),
               title = "Correlation between Mathematics Performance and Socioeconomic Status") +
  ggplot2::coord_cartesian(xlim = c(-4, 4),
                           ylim = c(100, 1000))

# Create scatter plot between reading and socioeconomic status
scatter_reading <- ggscatterstats(data = stu_qqq_sg,
               x = ESCS,
               y = PV1READ,
               marginal = FALSE,
               point.args = list(size = 0.5, 
                                 alpha = 0.4, 
                                 color = "blue"),
               smooth.line.args = list(linewidth = 0.5, 
                                       color = "gray15", 
                                       method = "lm", 
                                       formula = y ~ x),
               title = "Correlation between Reading Performance and Socioeconomic Status") +
  ggplot2::coord_cartesian(xlim = c(-4, 4),
                           ylim = c(100, 1000))

# Create scatter plot between science and socioeconomic status
scatter_science <- ggscatterstats(data = stu_qqq_sg,
               x = ESCS,
               y = PV1SCIE,
               marginal = FALSE,
               point.args = list(size = 0.5, 
                                 alpha = 0.4, 
                                 color = "red"),
               smooth.line.args = list(linewidth = 0.5, 
                                       color = "gray15", 
                                       method = "lm", 
                                       formula = y ~ x),
               title = "Correlation between Science Performance and Socioeconomic Status") +
  ggplot2::coord_cartesian(xlim = c(-4, 4),
                           ylim = c(100, 1000))

scatter_maths / scatter_reading / scatter_science

```

## The code

```{r fig.height = 12}
#| eval: false

# Create scatter plot between mathematics and socioeconomic status
scatter_maths <- ggscatterstats(data = stu_qqq_sg,
               x = ESCS,
               y = PV1MATH,
               marginal = FALSE,
               point.args = list(size = 0.5, 
                                 alpha = 0.4, 
                                 color = "chartreuse3"),
               smooth.line.args = list(linewidth = 0.5, 
                                       color = "gray15", 
                                       method = "lm", 
                                       formula = y ~ x),
               title = "Correlation between Mathematics Performance and Socioeconomic Status") +
  ggplot2::coord_cartesian(xlim = c(-4, 4),
                           ylim = c(100, 1000))

# Create scatter plot between reading and socioeconomic status
scatter_reading <- ggscatterstats(data = stu_qqq_sg,
               x = ESCS,
               y = PV1READ,
               marginal = FALSE,
               point.args = list(size = 0.5, 
                                 alpha = 0.4, 
                                 color = "blue"),
               smooth.line.args = list(linewidth = 0.5, 
                                       color = "gray15", 
                                       method = "lm", 
                                       formula = y ~ x),
               title = "Correlation between Reading Performance and Socioeconomic Status") +
  ggplot2::coord_cartesian(xlim = c(-4, 4),
                           ylim = c(100, 1000))

# Create scatter plot between science and socioeconomic status
scatter_science <- ggscatterstats(data = stu_qqq_sg,
               x = ESCS,
               y = PV1SCIE,
               marginal = FALSE,
               point.args = list(size = 0.5, 
                                 alpha = 0.4, 
                                 color = "red"),
               smooth.line.args = list(linewidth = 0.5, 
                                       color = "gray15", 
                                       method = "lm", 
                                       formula = y ~ x),
               title = "Correlation between Science Performance and Socioeconomic Status") +
  ggplot2::coord_cartesian(xlim = c(-4, 4),
                           ylim = c(100, 1000))

scatter_maths / scatter_reading / scatter_science

```
:::

::: callout-tip
## Interpretation

The scatter plot above shows that all the three subjects display marginal positive correlation with the students' families' socioeconomic status. The pearson R\^2 stays around 0.41 to 0.42 for all the three subjects.

Since the socioeconomic status is represented by ESCS index which is derived from the parents’ highest education, the parents’ highest occupational status and their home possessions, it suggests the financial stability and the well-being of the families.

The students from families with higher ESCS index are more likely to receive high quality of education from their parents which would shape their study behaviors and interests. Their parents can also afford high quality tuition for them, such 1-on-1 home tuition for all the subjects.
:::

## 4. Summary

### 4.1 Limitation

Although there are some interesting findings by exploring the differences between the students' performance in mathematics, reading and science with regards to their gender, school and socioeconomic status, there are some limitations in this take-home exercise.

1.  Most of the insights in the earlier sections are drawn based on the visual graphics. Due to the time constraints, statistical tests are not conducted except the last section on the correlation studies. Therefore, the findings can't be backed by the statistical evidence. If time allows, I'll perform statistical tests to validate if those differences discussed are really significant.

2.  It's a pity that PISA didn't provide a code book to identify the schools. They did that probably to protect the anonymity of the schools. However, this restricts our analysis to understand further about the performance in different types of schools. Although there is a variable to tell if the school is public or private, most of the schools in Singapore are public which makes this variable less useful in Singapore's context.

### 4.2 Conclusion

Through the visual checks discussed in this take-home exercise, there are indeed some interesting findings:

-   The students in Singapore generally performed better in mathematics and science than reading.

-   The students from different genders excelled in different subjects. Female students outperformed male students in reading, whereas male students generally do better in mathematics and science. This is probably due to their interests and brain systems.

-   There are differences in the academic performance among schools. Some schools are weak in all the three subjects, and some are strong in all the three subjects. Hence, there is still a long way to go before we actually achieve "Every school a good school" in Singapore.

-   Socioeconomic status does have some impact on the students' academic performance. Although the correlation is moderate, but the students from families with higher socioeconomic status generally achieve better results than those from families with lower socioeconomic status. This is probably due to the educational resources and the study environment that the parents could provide to their children.

This comes to the end of my take-home exercise 1. Hope you enjoyed reading my explorations and findings. See you in the next take-home exercise 🥰

## 5. Reference

Halpern, D.F., Benbow, C.P., Geary, D.C., Gur, R.C., Hyde, J.S., & Gernsbacher, M.A. (2007). The Science of Sex Differences in Science and Mathematics. *Psychological Science in the Public Interest*, 8(1), 1-51. https://doi.org/10.1111/j.1529-1006.2007.00032.x
